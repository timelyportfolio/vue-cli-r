{"version":3,"sources":["webpack:///./src/views/LeafletWidget.vue?0219","webpack:///./src/components/HtmlWidget.vue?04c6","webpack:///src/components/HtmlWidget.vue","webpack:///./src/components/HtmlWidget.vue?31af","webpack:///./src/components/HtmlWidget.vue","webpack:///src/views/LeafletWidget.vue","webpack:///./src/views/LeafletWidget.vue?2798","webpack:///./src/views/LeafletWidget.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","leafsettings","staticStyle","staticRenderFns","_t","component"],"mappings":"iHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,SAAS,CAACF,EAAG,KAAK,CAACJ,EAAIO,GAAG,qEAAqEH,EAAG,cAAc,CAACI,MAAM,CAAC,EAAIR,EAAIS,aAAa,KAAO,YAAY,CAACL,EAAG,MAAM,CAACE,YAAY,yCAAyCI,YAAY,CAAC,MAAQ,OAAO,OAAS,SAASF,MAAM,CAAC,GAAK,cAAc,IAC1ZG,EAAkB,GCDlB,EAAS,WAAa,IAAIX,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,eAAe,CAACN,EAAIY,GAAG,YAAY,IACrJ,EAAkB,GCItB,G,8BAAA,CACE,KAAF,aACE,MAAF,aACE,QAAF,CAGI,YAAJ,gBACM,GAAN,oBACQ,OAAR,wBACA,uBAEQ,OADA,EAAR,wBACA,EAEQ,MAAR,wDACA,mBAGI,aAAJ,WAGM,IAAN,OAEA,6BAGA,wBACQ,OAAR,mBACA,GAGA,yCAEA,oCAEA,yBAEQ,EAAR,gBACQ,KAAR,+BACQ,EAAR,YACA,EACA,OACA,IAIM,EAAN,YACA,EACA,OACA,KAIE,QAAF,WACI,GAAJ,2CAAI,CACA,IAAJ,OAEA,6BAGA,wBACM,OAAN,mBACA,GAGA,yCAGA,kBACI,KAAJ,+BACI,EAAJ,YACA,EACA,OACA,KAME,QAAF,WACI,KAAJ,gBAEE,MAAF,CACI,EAAJ,CACM,QAAN,WAAQ,QAAR,gBAAQ,KAAR,oBCxFoV,I,YCOhVC,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIa,EAAAA,E,QCHf,GACE,KAAF,QAEE,WAAF,CACI,WAAJ,GAGE,KAAF,WAAI,OAAJ,kBAEE,QAAF,WAGI,OAAJ,yBAGE,cAAF,WACI,QAAJ,kCACI,OAAJ,2BAEE,iBAAF,gBACI,OAAJ,0BACI,MCpCmV,ICOnV,EAAY,eACd,EACAd,EACAY,GACA,EACA,KACA,KACA,MAIa,e","file":"js/widget.d0530839.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"about\"},[_c('h3',[_vm._v(\"This is a leaflet htmlwidget from R in a lazy-loaded Vue route.\")]),_c('html-widget',{attrs:{\"x\":_vm.leafsettings,\"name\":\"leaflet\"}},[_c('div',{staticClass:\"leaflet html-widget html-widget-output\",staticStyle:{\"width\":\"100%\",\"height\":\"400px\"},attrs:{\"id\":\"leaf1\"}})])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"html-widget\"},[_vm._t(\"default\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"html-widget\"><slot></slot></div>\n</template>\n\n<script>\n  export default {\n    name: 'HtmlWidget',\n    props: ['x', 'name'],\n    methods: {\n      // Copied from HTMLWidgets code\n      // Implement a vague facsimilie of jQuery's data method\n      elementData: function(el, name, value) {\n        if (arguments.length == 2) {\n          return el['htmlwidget_data_' + name];\n        } else if (arguments.length == 3) {\n          el['htmlwidget_data_' + name] = value;\n          return el;\n        } else {\n          throw new Error('Wrong number of arguments for elementData: ' +\n            arguments.length);\n        }\n      },\n      updateWidget: function() {\n        // see comments in mounted which is nearly identical except in update we do not initialize or attach\n        //   initial data to the element.  we could clean this up and make one function.\n        var component = this\n        // use HTMLWidgets.widgets to give us a list of available htmlwidget bindings\n        var widgets = window.HTMLWidgets.widgets\n        // assume there might be lots, so filter for the one we want\n        //  in this case, we want jsonedit\n        var widget = widgets.filter(function(widget){\n          return widget.name === component.name\n        })[0]\n\n        // get our htmlwidget DOM element\n        var el = this.$el.querySelector('.html-widget');\n\n        var instance = this.elementData(el, 'init_result')\n\n        if(typeof(instance) === 'undefined') {\n          // get our htmlwidget instance with initialize\n          instance = widget.initialize(el);\n          this.elementData(el, 'init_result', instance);\n          widget.renderValue(\n            el,\n            this.x,\n            instance\n          )\n        }\n\n        widget.renderValue(\n          el,\n          this.x,\n          instance\n        )\n      }\n    },\n    mounted: function() {\n      if(typeof(this.x) === 'undefined' || this.x === null) { return }\n      var component = this;\n      // use HTMLWidgets.widgets to give us a list of available htmlwiget bindings\n      var widgets = window.HTMLWidgets.widgets;\n      // assume there might be lots, so filter for the one we want\n      //  in this case, we want jsonedit\n      var widget = widgets.filter(function(widget){\n        return widget.name === component.name\n      })[0];\n\n      // get our htmlwidget DOM element\n      var el = this.$el.querySelector('.html-widget');\n\n      // get our htmlwidget instance with initialize\n      var instance = widget.initialize(el);\n      this.elementData(el, 'init_result', instance);\n      widget.renderValue(\n        el,\n        this.x,\n        instance\n      );\n    },\n    // updated not working since does not watch deep\n    //   but if the expectation is that data and options are replaced completely\n    //   then updated will trigger\n    updated: function() {\n      this.updateWidget()\n    },\n    watch: {\n      x: {\n        handler: function() {console.log('updating');this.updateWidget()},\n        //deep: true\n      }\n    }\n  }\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HtmlWidget.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HtmlWidget.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./HtmlWidget.vue?vue&type=template&id=21374a17&\"\nimport script from \"./HtmlWidget.vue?vue&type=script&lang=js&\"\nexport * from \"./HtmlWidget.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"about\">\n    <h3>This is a leaflet htmlwidget from R in a lazy-loaded Vue route.</h3>\n    <html-widget\n      :x = \"leafsettings\"\n      name = \"leaflet\"\n    >\n      <div id=\"leaf1\" style=\"width:100%; height:400px; \" class=\"leaflet html-widget html-widget-output\"></div>\n    </html-widget>\n  </div>\n</template>\n\n<script>\n  import HtmlWidget from '@/components/HtmlWidget.vue'\n\n  export default {\n    name: 'About',\n\n    components: {\n      HtmlWidget,\n    },\n\n    data: function() {return this.$root.$data}, // this is messy and could be eliminated with vuex\n\n    mounted: function() {\n      // bind outputs in Vue to Shiny since they will not be picked up in the initial bind\n      //  redundant with main.js binding so that refreshed on route change\n      window.Shiny.bindAll(this.$el);\n    },\n    // beforeUnmount is not called with vue-router so use router navigation guards\n    beforeUnmount: function() {\n      console.log('about to unmount so unbind');\n      window.Shiny.unbindAll(this.$el);\n    },\n    beforeRouteLeave: function(to, from, next) {\n      window.Shiny.unbindAll(this.$el);\n      next();\n    },\n  }\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LeafletWidget.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LeafletWidget.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LeafletWidget.vue?vue&type=template&id=7279cb92&\"\nimport script from \"./LeafletWidget.vue?vue&type=script&lang=js&\"\nexport * from \"./LeafletWidget.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}